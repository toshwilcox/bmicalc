WindowManager:
    MainScreen:


#BMICalculator:
<MainScreen>
    BoxLayout:
        orientation: "vertical"
        #size_hint: 1, 1

        BoxLayout:
            orientation: "horizontal"
            size_hint: 1, .2
            #pos_hint: {"top": 1, "x":1}
            canvas.before:
                Color:
                    rgb: 0, 1, 1, 1
                Rectangle:
                    size: self.size
                    pos: self.pos


            ToggleButton:
                text: "ft + in"
                group: "units button"
                state: "down"
                size_hint: .5, .5
                allow_no_selection: False
                on_press: root.imperial_button()

            ToggleButton:
                text: "cm"
                group: "units button"
                size_hint: .5, .5
                allow_no_selection: False
                on_press: root.metric_button()
                #on_press: print('here') , self.state = "down"




        BoxLayout:
            size_hint: 1, .2
        #    pos_hint: {"top": .8, "x":1}
            canvas.before:
                Color:
                    rgb: 1, 0, 1, 1
                Rectangle:
                    size: self.size
                    pos: self.pos


            MDLabel:
                text: "Height"

            TextInput:
                #max_text_length: 4
                input_filter: "int"
                input_type: 'number'
                disabled: root.height_1_bool
                id: height_1
                on_text: root.calculate_bmi()
                #on_touch_down: print('touch down') #root.clear_height_text_1()
                #on_text: print('test')
                #on_focus: print('focused')
                on_touch_down: if self.collide_point(*args[1].pos): self.text = ""

            MDLabel:
                text: root.height_units_1

            MDTextField:
                #max_text_length: 4
                input_filter: "int"
                id: height_2
                on_text: root.calculate_bmi()
                on_touch_down: if self.collide_point(*args[1].pos): self.text = ""





            MDLabel:
                text: root.height_units_2

        BoxLayout:
            size_hint: 1, .2
        #    pos_hint: {"top": .8, "x":1}
            canvas.before:
                Color:
                    rgb: 1, 1, 0, 1
                Rectangle:
                    size: self.size
                    pos: self.pos

            MDLabel:
                text: "Weight"

            MDTextField:
                #max_text_length: 4
                input_filter: "int"
                id: weight
                on_text: root.calculate_bmi()
                on_touch_down: if self.collide_point(*args[1].pos): self.text = ""



            MDLabel:
                text: root.weight_units

        BoxLayout:
            size_hint: 1, .1
        #    pos_hint: {"top": .8, "x":1}
            canvas.before:
                Color:
                    rgb: .5, 1, .5, 1
                Rectangle:
                    size: self.size
                    pos: self.pos

            #MDRaisedButton:
            #    text: "Caclulate BMI"
            #    on_press: root.calculate_bmi()

            MDLabel:
                text: root.display_bmi
                #pos_hint: {"x": .5}




        BoxLayout:
            size_hint: 1, .3
        #    pos_hint: {"top": .8, "x":1}
            canvas.before:
                Color:
                    rgb: .5, .5, .5, 1
                Rectangle:
                    size: self.size
                    pos: self.pos

                Color:
                    rgb: 1, 1, 1, 1
                Rectangle:
                    size: self.width * .8, self.height * .5
                    pos: self.width*.1, self.height*.25

                # I will have values of bmi from 14 to 44

                # 14 - 18.5 is underweight red.
                Color:
                    rgb: 51/255, 233/255, 253/255, 1
                Rectangle:
                    size: (self.width * .8) * (4.5 / 30), self.height * .5
                    pos: self.width*.1, self.height*.25

                # 18.5 - 25 is healthy green.
                Color:
                    rgb: 0, 1, 0, 1
                Rectangle:
                    size: (self.width * .8) * (7.5 / 30), self.height * .5
                    pos: self.width*.1 + (self.width * .8) * (4.5 / 30), self.height*.25

                # 25 - 30 is overweight yellow.
                Color:
                    rgb: 240/255, 253/255, 51/255, 1
                Rectangle:
                    size: (self.width * .8) * (5 / 30), self.height * .5
                    pos: self.width*.1 + (self.width * .8) * (12 / 30), self.height*.25

                # 30-35 is obese orange. class 1
                Color:
                    rgb: 229/255, 132/255, 20/255, 1
                Rectangle:
                    size: (self.width * .8) * (5 / 30), self.height * .5
                    pos: self.width*.1 + (self.width * .8) * (17 / 30), self.height*.25

                # 35-40 is obese class 2 dark orange.
                Color:
                    rgb: 229/255, 69/255, 20/255, 1
                Rectangle:
                    size: (self.width * .8) * (5 / 30), self.height * .5
                    pos: self.width*.1 + (self.width * .8) * (22 / 30), self.height*.25

                # 40 - 44 is obese class 3 dark red.
                Color:
                    rgb: 1, 0, 0, 1
                Rectangle:
                    size: (self.width * .8) * (4 / 30), self.height * .5
                    pos: self.width*.1 + (self.width * .8) * (27 / 30), self.height*.25
